<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"
       default-lazy-init="true">

    <!-- 加载配置属性文件 -->
    <context:property-placeholder location="classpath:/conf.properties"
                                  ignore-resource-not-found="true"
                                  ignore-unresolvable="true"/>

    <!-- 扫描包下的注解类 -->
    <context:component-scan base-package="com.educonsulting.mms">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 数据源配置 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialPoolSize" value="${connection_pools.initial_pool_size}"/>
        <property name="minPoolSize" value="${connection_pools.min_pool_size}"/>
        <property name="maxPoolSize" value="${connection_pools.max_pool_size}"/>
        <property name="maxIdleTime" value="${connection_pools.max_idle_time}"/>
        <property name="acquireIncrement" value="${connection_pools.acquire_increment}"/>
        <property name="checkoutTimeout" value="${connection_pools.checkout_timeout}"/>
        <property name="maxStatements" value="${connection_pools.max_statements}"/>
        <property name="idleConnectionTestPeriod"
                  value="${connection_pools.idle_connection_test_period}"/>
        <property name="preferredTestQuery" value="${connection_pools.preferred_test_query}"/>
        <property name="breakAfterAcquireFailure"
                  value="${connection_pools.break_after_acquire_failure}"/>
        <property name="unreturnedConnectionTimeout"
                  value="${connection_pools.unreturned_connection_timeout}"/>
        <property name="debugUnreturnedConnectionStackTraces"
                  value="${connection_pools.debug_unreturned_connection_stack_traces}"/>
    </bean>

    <!-- 实体对象管理 -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceXmlLocation" value="classpath*:/persistence.xml"/>
        <property name="persistenceUnitName" value="persistenceUnit"/>
        <property name="packagesToScan" value="com.educonsulting.mms.entity"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false"/>
                <property name="generateDdl" value="true"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy
                </prop>
                <prop key="hibernate.cache.use_second_level_cache">
                    ${hibernate.cache.use_second_level_cache}
                </prop>
                <prop key="hibernate.cache.region.factory_class">
                    ${hibernate.cache.region.factory_class}
                </prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}
                </prop>
                <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
                <prop key="hibernate.connection.isolation">2</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
            </props>
        </property>
    </bean>

    <!-- 事务管理配置 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 启用事务注解功能 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false"/>

    <!-- 支持缓存注解 -->
    <cache:annotation-driven cache-manager="cacheManager"/>

    <!-- cacheManager工厂类，指定ehcache.xml的位置 -->
    <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:/ehcache.xml"/>
        <property name="shared" value="true"/>
    </bean>

    <!-- 默认是cacheManager -->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehCacheManager"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="java.lang.System"/>
        <property name="targetMethod" value="setProperty"/>
        <property name="arguments">
            <list>
                <value>system.project_name</value>
                <value>${system.project_name}</value>
            </list>
        </property>
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="cacheSeconds" value="${message.cache_seconds}"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
        <property name="basenames">
            <list>
                <value>/WEB-INF/language/message</value>
            </list>
        </property>
    </bean>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
        <property name="defaultLocale" value="${locale}"/>
    </bean>

    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
                <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
                <prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
                <!--
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                -->
            </props>
        </property>
    </bean>

    <bean id="taskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="${task.core_pool_size}"/>
        <property name="maxPoolSize" value="${task.max_pool_size}"/>
        <property name="queueCapacity" value="${task.queue_capacity}"/>
        <property name="keepAliveSeconds" value="${task.keep_alive_seconds}"/>
    </bean>

    <task:annotation-driven/>

</beans>